version: 2

aliases:
  - &restore-alohomora-cache
    restore_cache:
      keys:
        - alohomora-node-dep-{{ .Branch }}-{{ checksum "alohomora/yarn.lock"}}
        - alohomora-node-dep-{{ .Branch }}
        - alohomora-node-dep-
  - &save-alohomora-cache
    save_cache:
      paths:
        - alohomora/node_modules
      key: alohomora-node-dep-{{ .Branch }}-{{ checksum "alohomora/yarn.lock"}}
  - &restore-frontend-cache
    restore_cache:
      keys:
        - frontend-node-dep-{{ .Branch }}-{{ checksum "frontend/yarn.lock"}}
        - frontend-node-dep-{{ .Branch }}
        - frontend-node-dep-
  - &save-frontend-cache
    save_cache:
      paths:
        - frontend/node_modules
      key: frontend-node-dep-{{ .Branch }}-{{ checksum "frontend/yarn.lock"}}
  - &docker-login echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - &remove-old-images ssh -oStrictHostKeyChecking=no "${STAGE}.ci@open.anton.pizza" "bash -s scripts/ci-scripts/remove-old-images.sh"

jobs:
  build-frontend:
    docker:
      - image: circleci/node:10.15
    working_directory: ~/repo
    steps:
      - checkout
      - *restore-frontend-cache
      - run: yarn --cwd frontend install
      - *save-frontend-cache
      - run: yarn --cwd frontend run build
      - persist_to_workspace:
          root: frontend
          paths:
            - build

  deploy-frontend:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: build
      - run: echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
      - run: mv build/build "${STAGE}:$(source scripts/ci-scripts/short-sha.sh)"
      - run: gsutil cp -r "${STAGE}:$(source scripts/ci-scripts/short-sha.sh)" "${BUCKET_URL}/${STAGE}"
      - run: scp -r -oStrictHostKeyChecking=no "./${STAGE}:$(source scripts/ci-scripts/short-sha.sh)" "${STAGE}.ci@open.anton.pizza:/var/www/builds/${STAGE}"
      - run: ssh -oStrictHostKeyChecking=no "${STAGE}.ci@open.anton.pizza" "unlink /var/www/${STAGE}; ln -s /var/www/builds/${STAGE}/${STAGE}:$(source scripts/ci-scripts/short-sha.sh) /var/www/${STAGE}"

  test-alohomora:
    docker:
      - image: circleci/node:10.15
        environment:
          NODE_ENV: "test"
      - image: antonhager/mcoa_mock_server
      - image: postgres:10.5
        environment:
          POSTGRES_USER: mcoa_app
          POSTGRES_PASSWORD: password
          POSTGRES_DB: mcoa_test
    working_directory: ~/repo
    steps:
      - checkout
      - *restore-alohomora-cache
      - run: yarn --cwd alohomora install
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: yarn --cwd alohomora run test
      - *save-alohomora-cache

  build-alohomora:
    docker:
      - image: circleci/node:10.15
    working_directory: ~/repo
    steps:
      - checkout
      - *restore-alohomora-cache
      - setup_remote_docker
      - run: *docker-login
      - *save-alohomora-cache
      - run:
          command: |
            docker build -t ${DOCKER_USERNAME}/alohomora:$(source scripts/ci-scripts/short-sha.sh) alohomora
            docker push ${DOCKER_USERNAME}/alohomora:$(source scripts/ci-scripts/short-sha.sh)

  deploy-alohomora:
    docker:
      - image: circleci/node:10.15
    steps:
      - run: ssh -oStrictHostKeyChecking=no "ci@${STAGE}.open.anton.pizza" "bash -s scripts/ci-scripts/deploy-alohomora.sh ${STAGE} alohomora ${DOCKER_USERNAME} $(source scripts/ci-scripts/short-sha.sh)"
      - run: *remove-old-images

  build-mock-server:
    docker:
      - image: circleci/node:10.15
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run: docker build -t $DOCKER_USERNAME/mcoa_mock_server:$(source scripts/ci-scripts/short-sha.sh) mock-server/ && docker push $DOCKER_USERNAME/mcoa_mock_server:$(source scripts/ci-scripts/short-sha.sh)

  deploy-mock-server:
    docker:
      - image: circleci/node:10.15
    steps:
      - run: ssh -oStrictHostKeyChecking=no "ci@${STAGE}.open.anton.pizza" "bash -s scripts/ci-scripts/deploy-alohomora.sh ${STAGE} mcoa_mock_server ${DOCKER_USERNAME} $(source scripts/ci-scripts/short-sha.sh)"
      - run: *remove-old-images

workflows:
  version: 2

  frontend-prod:
    jobs:
      - build-frontend:
          context: production
          filters:
            branches:
              only: /master/
      - deploy-frontend:
          context: production
          requires:
            - build-frontend

  alohomora-prod:
    jobs:
      - test-alohomora:
          context: production
          filters:
            branches:
              only: /master/
      - build-alohomora:
          context: production
          requires:
            - test-alohomora
      - deploy-alohomora:
          context: production
          requires:
            - build-alohomora

  frontend-staging:
    jobs:
      - build-frontend:
          context: staging
          filters:
            branches:
              only: /staging/
      - deploy-frontend:
          context: staging
          requires:
            - build-frontend

  alohomora-staging:
    jobs:
      - test-alohomora:
          context: staging
          filters:
            branches:
              only: /staging/
      - build-alohomora:
          context: staging
          requires:
            - test-alohomora
      - deploy-alohomora:
          context: staging
          requires:
            - build-alohomora

  mock-server:
    jobs:
      - build-mock-server:
          context: staging
          filters:
            branches:
              only: /staging/
      - deploy-mock-server:
          context: staging
          requires:
            - build-mock-server
