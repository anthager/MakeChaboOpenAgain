version: 2

jobs:
  build-frontend:
    docker:
        - image: circleci/node:10.15
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - frontend-dep-{{ checksum "frontend/base/yarn.lock" }}
            - frontend-dep-
      - run: yarn --cwd frontend install
      - save_cache:
          paths:
            - frontend/node_modules
          key: frontend-dep-{{ checksum "frontend/base/yarn.lock" }}
      - run: yarn --cwd frontend run build
      - persist_to_workspace:
          root: frontend
          paths:
            - build

  deploy-frontend:
    docker:
        - image: circleci/node:10.15
    steps:
      - attach_workspace:
          at: build
      - run: mv build ${CIRCLE_BRANCH}-${$CIRCLE_WORKFLOW_ID}
      - run: scp -r -oStrictHostKeyChecking=no "${CIRCLE_BRANCH}-${$CIRCLE_WORKFLOW_ID}" "antonhagermalm@open.anton.pizza:/var/www/builds"
      - run: ssh -r -oStrictHostKeyChecking=no "antonhagermalm@open.anton.pizza" "unlink /var/www/${CIRCLE_BRANCH}; ln -s /var/www/builds/${CIRCLE_BRANCH}-${$CIRCLE_WORKFLOW_ID} /var/www/${CIRCLE_BRANCH}"

  build-and-test-backend:
    docker:
        - image: circleci/node:10.15
          environment:
            NODE_ENV: "test"
        - image: antonhager/mcoa_mock_server
        - image: postgres:10.5
          environment:
            POSTGRES_USER: mcoa_app
            POSTGRES_PASSWORD: password
            POSTGRES_DB: make_chabo_open_again_test
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - backend-node-dep-{{ checksum "backend-node/yarn.lock" }}
            - backend-node-dep
      - setup_remote_docker
      - run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run: yarn --cwd backend-node install
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: yarn --cwd backend-node run test
      - save_cache:
          paths:
            - backend-node/node_modules
          key: backend-node-dep-{{ checksum "backend-node/yarn.lock" }}
      - run: docker build -t $DOCKER_USERNAME/mcoa-backend:$CIRCLE_WORKFLOW_ID backend-node/ && docker push $DOCKER_USERNAME/mcoa-backend:$CIRCLE_WORKFLOW_ID

  deploy-backend:
    docker:
        - image: circleci/node:10.15
    steps:
      - run: ssh -r -oStrictHostKeyChecking=no "antonhagermalm@open.anton.pizza" "docker kill mcoa-backend-${CIRCLE_BRANCH}; docker rm mcoa-backend-${CIRCLE_BRANCH} && docker run --name mcoa-backend-${CIRCLE_BRANCH} --network swag --env-file .${CIRCLE_BRANCH}.env ${}$DOCKER_USERNAME/mcoa-backend:$CIRCLE_WORKFLOW_ID"
          

  build-mock-server:
    docker:
        - image: circleci/node:10.15
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run: docker build -t $DOCKER_USERNAME/mcoa-mock-server:$CIRCLE_WORKFLOW_ID mock-server/ && docker push $DOCKER_USERNAME/mcoa-mock-server:$CIRCLE_WORKFLOW_ID

workflows:
  version: 2

  build-deploy-staging:
    jobs:
      - build-frontend:
          filters:
            branches:
              only: staging
      - deploy-frontend:
          requires:
            - build-frontend
  
  build-deploy-prod:
    jobs:
      - build-frontend:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy-frontend:
          requires:
            - build-frontend
  build-backend:
    jobs: 
      - build-and-test-backend
      # - build-and-test-backend:
      #     filters:
      #       branches: 
      #         only: /staging|master/
      
